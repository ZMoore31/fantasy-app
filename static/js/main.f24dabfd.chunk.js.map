{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["limitList","data","limit","length","slice","avg","tempData","sum","reduce","a","b","getItem","list","matchValue","matchField","index","map","temp","indexOf","formatYAxis","tickItem","toFixed","formatDiffXAxis","App","useState","currentWeek","updateCurrentWeek","currentWeekSchedule","updateCurrentSchedule","league","year","teams","updateTeams","schedule","updateSchedule","selectedMatchup","updateMatchup","away","updateAway","home","updateHome","updateAwayNormDist","updateHomeNormDist","normDist","updateNormDist","Math","random","graphData","updateGraphData","useEffect","axios","get","then","res","Number","scoringPeriodId","dataHome","obj","id","week","matchupPeriodId","teamId","totalPoints","dataAway","concat","sort","filter","currentSched","updatedTeams","stats","average","squareDiffs","value","variance","getStats","obj2","obj3","tempAway","tempHome","newAwayNormDist","NormalDistribution","newHomeNormDist","newNormDist","newGraphData","normal","i","push","name","pdf","diff","console","log","generateNormalData","error","className","onChange","event","target","awayTeam","homeTeam","location","nickname","cdf","width","height","margin","top","right","left","bottom","strokeDasharray","dataKey","type","tickFormatter","strokeWidth","stroke","dot","divisionId","record","overall","wins","pointsFor","losses","pointsAgainst","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f24dabfd.chunk.js","sourcesContent":["import React, { useState, useEffect, Fragment } from \"react\";\nimport axios from \"axios\";\nimport NormalDistribution from 'gaussian';\nimport {\n  ResponsiveContainer, LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\n} from 'recharts';\n\nimport './App.css';\n\nconst limitList = (data, limit = null) => {\n  let temp;\n  if (limit < data.length) {\n    temp = data.slice(-limit);\n  } else {\n    temp = data;\n  }\n  return temp;\n};\n\nconst avg = (data, limit = null) => {\n  const tempData = limitList(data, limit);\n  const sum = tempData.reduce((a, b) => {\n    return a + b;\n  }, 0);\n  return sum / tempData.length;\n};\n\nconst getStats = (data, limit = null) => {\n  const tempData = limitList(data, limit);\n  const average = avg(tempData);\n  const squareDiffs = tempData.map(value => (value - average) ** 2);\n  return { average: average, variance: avg(squareDiffs) };\n};\n\nconst getItem = (list, matchValue, matchField) => {\n  const index = list.map(temp => temp[matchField]).indexOf(matchValue)\n  return list[index]\n}\n\nconst generateNormalData = (normal) => {\n  let data = []\n  for (let i = 0; i <= 200; i++) {\n    data.push({ name: i, away: normal[0].pdf(i), home: normal[1].pdf(i), diff: normal[2].pdf(i - 100) })\n  }\n  console.log(data)\n  return (data)\n}\n\n// const simulateRegularSeason = (teamDetails, remainingSchedule)\n\nfunction App() {\n  const [currentWeek, updateCurrentWeek] = useState(null);\n  const [currentWeekSchedule, updateCurrentSchedule] = useState([]);\n  const [league, updateLeague] = useState(\"78513283\");\n  const [year, updateYear] = useState(2020);\n  const [teams, updateTeams] = useState([]);\n  const [schedule, updateSchedule] = useState([]);\n  const [selectedMatchup, updateMatchup] = useState(null)\n  const [away, updateAway] = useState({})\n  const [home, updateHome] = useState({})\n  const [awayNormDist, updateAwayNormDist] = useState(null)\n  const [homeNormDist, updateHomeNormDist] = useState(null)\n  const [normDist, updateNormDist] = useState(null)\n  const [awayRandom, updateAwayRandom] = useState(Math.random())\n  const [homeRandom, updateHomeRandom] = useState(Math.random())\n  const [graphData, updateGraphData] = useState([])\n\n  const refresh = () => {\n    updateAwayRandom(Math.random())\n    updateHomeRandom(Math.random())\n  }\n\n  useEffect(() => {\n    axios\n      .get(\n        `https://fantasy.espn.com/apis/v3/games/ffl/seasons/${year}/segments/0/leagues/${league}?view=mTeam`\n      )\n      .then(res => {\n        updateCurrentWeek(Number(res.data.scoringPeriodId));\n        updateTeams(res.data.teams);\n      });\n  }, [league, year]);\n\n  useEffect(() => {\n    axios\n      .get(\n        `https://fantasy.espn.com/apis/v3/games/ffl/seasons/${year}/segments/0/leagues/${league}?view=mMatchup&view=mMatchupScore`\n      )\n      .then(res => {\n        const dataHome = res.data.schedule.map(obj => {\n          return {\n            id: obj.id,\n            week: obj.matchupPeriodId,\n            teamId: obj.home.teamId,\n            totalPoints: obj.home.totalPoints\n          };\n        });\n        const dataAway = res.data.schedule.map(obj => {\n          return {\n            id: obj.id,\n            week: obj.matchupPeriodId,\n            teamId: obj.away.teamId,\n            totalPoints: obj.away.totalPoints\n          };\n        });\n        const data = dataHome.concat(dataAway);\n        updateSchedule(\n          data\n            .sort((a, b) => {\n              return a.week - b.week;\n            })\n            .filter(obj => {\n              return obj.week < currentWeek;\n            })\n        );\n        const currentSched = res.data.schedule.filter(obj => {\n          return obj.matchupPeriodId === currentWeek\n        })\n        updateCurrentSchedule(\n          currentSched\n        );\n        if (currentSched.length > 0) {\n          updateMatchup(\n            currentSched[0].id\n          )\n        }\n      });\n  }, [league, year, currentWeek]);\n\n  useEffect(() => {\n    const updatedTeams = teams.map(obj => {\n      const stats = getStats(\n        schedule\n          .filter(obj2 => {\n            return obj2.teamId === obj.id;\n          })\n          .map(obj3 => obj3.totalPoints)\n      )\n\n      return { ...obj, average: stats.average, variance: stats.variance }\n    })\n    updateTeams(updatedTeams)\n  }, [schedule])\n\n  useEffect(() => {\n    try {\n      const tempAway = getItem(teams, getItem(currentWeekSchedule, Number(selectedMatchup), 'id').away.teamId, 'id')\n      updateAway(tempAway)\n      const tempHome = getItem(teams, getItem(currentWeekSchedule, Number(selectedMatchup), 'id').home.teamId, 'id')\n      updateHome(tempHome)\n      if (tempHome.average && tempAway.average) {\n        const newAwayNormDist = NormalDistribution(tempAway.average, tempAway.variance);\n        updateAwayNormDist(newAwayNormDist)\n        const newHomeNormDist = NormalDistribution(tempHome.average, tempHome.variance);\n        updateHomeNormDist(newHomeNormDist)\n        const newNormDist = NormalDistribution(tempHome.average - tempAway.average, tempHome.variance + tempAway.variance);\n        updateNormDist(newNormDist)\n        const newGraphData = generateNormalData([newAwayNormDist, newHomeNormDist, newNormDist])\n        updateGraphData(newGraphData)\n      }\n    } catch (error) {\n      console.log(error)\n    }\n  }, [selectedMatchup, currentWeekSchedule, teams])\n\n  if (teams.length === 0) {\n    return <div>Getting team data...</div>\n  }\n\n  if (schedule.length === 0) {\n    return <div>Getting historical data...</div>\n  }\n\n  if (!selectedMatchup) {\n    return <div>Getting matchup data...</div>\n  }\n\n  return (\n    <div>\n      {/* {teams.map(obj => (\n        <div style={{ display: 'flex', flexDirection: 'row' }}>\n          <div>\n            <span>{obj.id} </span>\n            <span>{obj.location} </span>\n            <span>{obj.nickname}</span>\n          </div>\n          <div style={{ display: 'flex', flexDirection: 'row' }}>\n            {schedule\n              .filter(obj2 => {\n                return obj2.teamId === obj.id;\n              })\n              .map(obj3 => (\n                <div>\n                  <div>{obj3.totalPoints}</div>\n                </div>\n              ))}\n          </div>\n          <div>\n            {obj.average}\n          </div>\n          <div>\n            {Math.sqrt(obj.variance)}\n          </div>\n        </div>\n      ))} */}\n\n      <div className='matchUpHeader'>\n        <select name=\"matchUp\" className=\"matchUpSelect\" value={selectedMatchup} onChange={event => updateMatchup(event.target.value)}>\n          {currentWeekSchedule.map(obj => {\n            const awayTeam = getItem(teams, obj.away.teamId, 'id')\n            const homeTeam = getItem(teams, obj.home.teamId, 'id')\n            if (!homeTeam || !awayTeam) {\n              return null\n            }\n            return <option value={obj.id}>{awayTeam.location} {awayTeam.nickname} vs {homeTeam.location} {homeTeam.nickname}</option>\n          })}\n        </select>\n        <div>{away.location} {away.nickname} {normDist ? `(${(normDist.cdf(0) * 100).toFixed(2)}%)` : null} vs {home.location} {home.nickname} {normDist ? `(${((1 - normDist.cdf(0)) * 100).toFixed(2)}%)` : null}</div>\n      </div>\n      {/* {awayNormDist? <div>{JSON.stringify(awayNormDist.ppf(awayRandom))}</div> : null}\n      {homeNormDist? <div>{JSON.stringify(homeNormDist.ppf(homeRandom))}</div> : null}\n      <button onClick={refresh}>Refresh</button> */}\n      <div className='row fullWidth spaceEvenly' >\n        <div className='graphContainer'>\n          <ResponsiveContainer width=\"100%\" height={300}>\n            <LineChart\n              data={graphData}\n              margin={{\n                top: 24, right: 56, left: 40, bottom: 8,\n              }}\n            >\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis dataKey=\"name\" type='number' />\n              <YAxis tickFormatter={formatYAxis} />\n              <Legend />\n              <Line type=\"monotone\" strokeWidth={3} dataKey=\"away\" stroke=\"#CC0014\" name={`${away.location} ${away.nickname}`} dot={false} />\n              <Line type=\"monotone\" strokeWidth={3} dataKey=\"home\" stroke=\"#31572c\" name={`${home.location} ${home.nickname}`} dot={false} />\n            </LineChart>\n          </ResponsiveContainer>\n        </div>\n        <div className='graphContainer'>\n          <ResponsiveContainer width=\"100%\" height={300}>\n            <LineChart\n              data={graphData}\n              margin={{\n                top: 24, right: 56, left: 40, bottom: 8,\n              }}\n            >\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis dataKey=\"name\" type='number' tickFormatter={formatDiffXAxis} />\n              <YAxis tickFormatter={formatYAxis} />\n              <Legend />\n              <Line type=\"monotone\" strokeWidth={3} dataKey=\"diff\" stroke=\"#000\" name={`${home.location} ${home.nickname} - ${away.location} ${away.nickname}`} dot={false} />\n            </LineChart>\n          </ResponsiveContainer>\n        </div>\n      </div>\n      <div className='row fullWidth spaceEvenly'>\n        <div className='rankingsTable'>\n          <div className='fullWidth header'>Guy's Division</div>\n          <div className='row'>\n            <div className='col'>\n              <div className='row row-header'><div className='nameCell'>Team Name</div></div>\n              {teams.filter(obj => obj.divisionId === 0).sort((a, b) => {\n                if (b.record.overall.wins - a.record.overall.wins === 0) {\n                  return b.record.overall.pointsFor - a.record.overall.pointsFor\n                }\n                return b.record.overall.wins - a.record.overall.wins\n              }).map(obj => {\n                return <div className='nameCell'>{obj.location} {obj.nickname}</div>\n\n              })}\n            </div>\n            <div className='col valueCells'>\n              <div className=\"row row-header\"><div className='valueCell'>Wins</div><div className='valueCell'>Losses</div><div className='valueCell'>Points For</div><div className='valueCell'>Points Against</div></div>\n              {teams.filter(obj => obj.divisionId === 0).sort((a, b) => {\n                if (b.record.overall.wins - a.record.overall.wins === 0) {\n                  return b.record.overall.pointsFor - a.record.overall.pointsFor\n                }\n                return b.record.overall.wins - a.record.overall.wins\n              }).map(obj => {\n                return <div className=\"row\"><div className='valueCell'>{obj.record.overall.wins}</div><div className='valueCell'>{obj.record.overall.losses}</div><div className='valueCell'>{obj.record.overall.pointsFor.toFixed(2)}</div><div className='valueCell'>{obj.record.overall.pointsAgainst.toFixed(2)}</div></div>\n\n              })}\n            </div>\n          </div>\n        </div>\n        <div className='rankingsTable'>\n          <div className='fullWidth header'>Girl's Division</div>\n          <div className='row'>\n            <div className='col'>\n              <div className='row row-header'><div className='nameCell'>Team Name</div></div>\n              {teams.filter(obj => obj.divisionId === 1).sort((a, b) => {\n                if (b.record.overall.wins - a.record.overall.wins === 0) {\n                  return b.record.overall.pointsFor - a.record.overall.pointsFor\n                }\n                return b.record.overall.wins - a.record.overall.wins\n              }).map(obj => {\n                return <div className='nameCell'>{obj.location} {obj.nickname}</div>\n\n              })}\n            </div>\n            <div className='col valueCells'>\n              <div className=\"row row-header\"><div className='valueCell'>Wins</div><div className='valueCell'>Losses</div><div className='valueCell'>Points For</div><div className='valueCell'>Points Against</div></div>\n              {teams.filter(obj => obj.divisionId === 1).sort((a, b) => {\n                if (b.record.overall.wins - a.record.overall.wins === 0) {\n                  return b.record.overall.pointsFor - a.record.overall.pointsFor\n                }\n                return b.record.overall.wins - a.record.overall.wins\n              }).map(obj => {\n                return <div className=\"row\"><div className='valueCell'>{obj.record.overall.wins}</div><div className='valueCell'>{obj.record.overall.losses}</div><div className='valueCell'>{obj.record.overall.pointsFor.toFixed(2)}</div><div className='valueCell'>{obj.record.overall.pointsAgainst.toFixed(2)}</div></div>\n\n              })}\n            </div>\n          </div>\n        </div>\n\n      </div>\n    </div>\n  );\n}\n\nconst formatYAxis = (tickItem) => {\n  return `${(tickItem * 100).toFixed(2)}%`\n}\n\nconst formatDiffXAxis = (tickItem) => {\n  return tickItem - 100\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}