{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["limitList","data","limit","length","slice","avg","tempData","sum","reduce","a","b","getItem","list","matchValue","matchField","index","map","temp","indexOf","generateSimulationScores","teams","futureSchedule","obj","winner","awayTeam","away","teamId","awayDist","NormalDistribution","average","variance","homeTeam","home","homeDist","totalPoints","ppf","Math","random","calcRecords","results","record","calculated","wins","losses","pointsFor","pointsAgainst","indexes","ind","id","x","game","divisionWinners","filter","divisionId","sort","nonWinners","includes","playoffRankings","playoffSeed","calcPlayoffRankings","formatYAxis","tickItem","toFixed","formatDiffXAxis","App","useState","currentWeek","updateCurrentWeek","currentWeekSchedule","updateCurrentSchedule","league","year","updateTeams","updateFutureSchedule","pastSchedule","updatePastSchedule","selectedMatchup","updateMatchup","updateAway","updateHome","updateAwayNormDist","updateHomeNormDist","normDist","updateNormDist","graphData","updateGraphData","simulatedData","updateSimulation","numberOfSims","weeksForProj","useEffect","axios","get","then","res","Number","scoringPeriodId","currentSched","schedule","matchupPeriodId","dataHome","week","dataAway","concat","updatedTeams","stats","squareDiffs","value","getStats","obj2","obj3","calcedTeams","tempAway","tempHome","newAwayNormDist","newHomeNormDist","newNormDist","newGraphData","normal","i","push","name","pdf","diff","generateNormalData","error","console","log","className","onChange","event","target","location","nickname","sqrt","cdf","width","height","margin","top","right","left","bottom","strokeDasharray","dataKey","type","tickFormatter","strokeWidth","stroke","dot","style","onClick","future","sim","aggData","playoffMatrix","aggIndexes","y","_","Object","values","keys","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7abc15eb.chunk.js","sourcesContent":["import React, { useState, useEffect, Fragment } from \"react\";\nimport axios from \"axios\";\nimport NormalDistribution from 'gaussian';\nimport {\n  ResponsiveContainer, LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\n} from 'recharts';\n\nimport './App.css';\n\nconst limitList = (data, limit = null) => {\n  let temp;\n  if (limit < data.length) {\n    temp = data.slice(-limit);\n  } else {\n    temp = data;\n  }\n  return temp;\n};\n\nconst avg = (data, limit = null) => {\n  const tempData = limitList(data, limit);\n  const sum = tempData.reduce((a, b) => {\n    return a + b;\n  }, 0);\n  return sum / tempData.length;\n};\n\nconst getStats = (data, limit = null) => {\n  const tempData = limitList(data, limit);\n  const average = avg(tempData);\n  const squareDiffs = tempData.map(value => (value - average) ** 2);\n  return { average: average, variance: avg(squareDiffs) };\n};\n\nconst getItem = (list, matchValue, matchField) => {\n  const index = list.map(temp => temp[matchField]).indexOf(matchValue)\n  return list[index]\n}\n\nconst generateNormalData = (normal) => {\n  let data = []\n  for (let i = 0; i <= 200; i++) {\n    data.push({ name: i, away: normal[0].pdf(i), home: normal[1].pdf(i), diff: normal[2].pdf(i - 100) })\n  }\n  return (data)\n}\n\nconst generateSimulationScores = (teams, futureSchedule) => {\n  return futureSchedule.map(obj => {\n    const awayTeam = getItem(teams, obj.away.teamId, 'id')\n    const awayDist = NormalDistribution(awayTeam.average, awayTeam.variance)\n    const homeTeam = getItem(teams, obj.home.teamId, 'id')\n    const homeDist = NormalDistribution(homeTeam.average, homeTeam.variance)\n    obj.away.totalPoints = awayDist.ppf(Math.random())\n    obj.home.totalPoints = homeDist.ppf(Math.random())\n    let winner\n    if (obj.away.totalPoints > obj.home.totalPoints) {\n      winner = 'AWAY'\n    } else {\n      winner = 'HOME'\n    }\n    obj.winner = winner\n    return obj\n  })\n}\n\nconst calcPlayoffRankings = (teams) => {\n  if (teams.length !== 0) {\n    const division1Winner = teams.filter(obj => obj.divisionId === 0).sort((a, b) => {\n      if (b.record.calculated.wins - a.record.calculated.wins === 0) {\n        return b.record.calculated.pointsFor - a.record.calculated.pointsFor\n      }\n      return b.record.calculated.wins - a.record.calculated.wins\n    })[0]\n    const division2Winner = teams.filter(obj => obj.divisionId === 1).sort((a, b) => {\n      if (b.record.calculated.wins - a.record.calculated.wins === 0) {\n        return b.record.calculated.pointsFor - a.record.calculated.pointsFor\n      }\n      return b.record.calculated.wins - a.record.calculated.wins\n    })[0]\n    const divisionWinners = [division1Winner, division2Winner].sort((a, b) => {\n      if (b.record.calculated.wins - a.record.calculated.wins === 0) {\n        return b.record.calculated.pointsFor - a.record.calculated.pointsFor\n      }\n      return b.record.calculated.wins - a.record.calculated.wins\n    })\n    const nonWinners = teams.filter(obj => {\n      return !divisionWinners.includes(obj)\n    }).sort((a, b) => {\n      if (b.record.calculated.wins - a.record.calculated.wins === 0) {\n        return b.record.calculated.pointsFor - a.record.calculated.pointsFor\n      }\n      return b.record.calculated.wins - a.record.calculated.wins\n    })\n    let playoffRankings = [...divisionWinners, ...nonWinners]\n    playoffRankings = playoffRankings.map((obj, index) => {\n      obj.playoffSeed = index + 1;\n      return obj;\n    })\n    return playoffRankings.sort((a, b) => {\n      return a.playoffSeed - b.playoffSeed\n    });\n  }\n  return []\n}\n\nconst calcRecords = (results, teams) => {\n  let data = teams.map(obj => {\n    return { ...obj, record: { ...obj.record, calculated: { wins: 0, losses: 0, pointsFor: 0, pointsAgainst: 0 } } }\n  })\n  const indexes = teams.reduce((map, obj, ind) => {\n    map[obj.id] = ind\n    return map\n  }, {})\n  for (let x in results) {\n    const game = results[x]\n    if (game.winner === \"AWAY\") {\n      data[indexes[game.away.teamId]].record.calculated.wins += 1\n      data[indexes[game.home.teamId]].record.calculated.losses += 1\n    } else {\n      data[indexes[game.home.teamId]].record.calculated.wins += 1\n      data[indexes[game.away.teamId]].record.calculated.losses += 1\n    }\n    data[indexes[game.home.teamId]].record.calculated.pointsFor += game.home.totalPoints\n    data[indexes[game.home.teamId]].record.calculated.pointsAgainst += game.away.totalPoints\n    data[indexes[game.away.teamId]].record.calculated.pointsFor += game.away.totalPoints\n    data[indexes[game.away.teamId]].record.calculated.pointsAgainst += game.home.totalPoints\n  }\n  data = calcPlayoffRankings(data)\n  return data\n}\n\nfunction App() {\n  const [currentWeek, updateCurrentWeek] = useState(null);\n  const [currentWeekSchedule, updateCurrentSchedule] = useState([]);\n  const [league, updateLeague] = useState(\"78513283\");\n  const [year, updateYear] = useState(2020);\n  const [teams, updateTeams] = useState([]);\n  const [futureSchedule, updateFutureSchedule] = useState([]);\n  const [pastSchedule, updatePastSchedule] = useState([]);\n  const [selectedMatchup, updateMatchup] = useState(null)\n  const [away, updateAway] = useState({})\n  const [home, updateHome] = useState({})\n  const [awayNormDist, updateAwayNormDist] = useState(null)\n  const [homeNormDist, updateHomeNormDist] = useState(null)\n  const [normDist, updateNormDist] = useState(null)\n  const [awayRandom, updateAwayRandom] = useState(Math.random())\n  const [homeRandom, updateHomeRandom] = useState(Math.random())\n  const [graphData, updateGraphData] = useState([])\n  const [simulatedData, updateSimulation] = useState([])\n  const [numberOfSims, updateNumberOfSims] = useState(10000)\n  const [weeksForProj, updateWeeksForPro] = useState(5)\n\n  const refresh = () => {\n    updateAwayRandom(Math.random())\n    updateHomeRandom(Math.random())\n  }\n\n  const simulation = () => {\n    let results = []\n    let data = []\n    for (let i = 1; i <= numberOfSims; i++) {\n      const future = generateSimulationScores(teams, futureSchedule)\n      const sim = calcRecords([...pastSchedule, ...future], teams)\n      results.push([...pastSchedule, ...future])\n      data.push(sim)\n    }\n    let aggData = teams.map(obj => {\n      return { ...obj, playoffSeed: 0, playoffMatrix: {}, record: { ...obj.record, calculated: { wins: 0, losses: 0, pointsFor: 0, pointsAgainst: 0 } } }\n    })\n    const aggIndexes = teams.reduce((map, obj, ind) => {\n      map[obj.id] = ind\n      return map\n    }, {})\n    for (let x in data) {\n      const indexes = data[x].reduce((map, obj, ind) => {\n        map[obj.id] = ind\n        return map\n      }, {})\n      for (let y in data[x]) {\n        aggData[aggIndexes[data[x][y].id]].playoffSeed += data[x][indexes[data[x][y].id]].playoffSeed / numberOfSims\n        aggData[aggIndexes[data[x][y].id]].playoffMatrix[data[x][indexes[data[x][y].id]].playoffSeed] = (aggData[aggIndexes[data[x][y].id]].playoffMatrix[data[x][indexes[data[x][y].id]].playoffSeed] || 0) + 1 / numberOfSims;\n        aggData[aggIndexes[data[x][y].id]].record.calculated.wins += data[x][indexes[data[x][y].id]].record.calculated.wins / numberOfSims\n        aggData[aggIndexes[data[x][y].id]].record.calculated.losses += data[x][indexes[data[x][y].id]].record.calculated.losses / numberOfSims\n        aggData[aggIndexes[data[x][y].id]].record.calculated.pointsFor += data[x][indexes[data[x][y].id]].record.calculated.pointsFor / numberOfSims\n        aggData[aggIndexes[data[x][y].id]].record.calculated.pointsAgainst += data[x][indexes[data[x][y].id]].record.calculated.pointsAgainst / numberOfSims\n      }\n    }\n    console.log(aggData)\n    updateSimulation(aggData.sort((a, b) => {\n      return a.playoffSeed - b.playoffSeed\n    }))\n  }\n\n  useEffect(() => {\n    axios\n      .get(\n        `https://fantasy.espn.com/apis/v3/games/ffl/seasons/${year}/segments/0/leagues/${league}?view=mTeam`\n      )\n      .then(res => {\n        updateCurrentWeek(Number(res.data.scoringPeriodId));\n        // updateCurrentWeek(6);\n        updateTeams(res.data.teams);\n      });\n  }, [league, year]);\n\n  useEffect(() => {\n    axios\n      .get(\n        `https://fantasy.espn.com/apis/v3/games/ffl/seasons/${year}/segments/0/leagues/${league}?view=mMatchup&view=mMatchupScore`\n      )\n      .then(res => {\n        const currentSched = res.data.schedule.filter(obj => {\n          return obj.matchupPeriodId === currentWeek\n        })\n        updateCurrentSchedule(\n          currentSched\n        );\n        updateFutureSchedule(res.data.schedule.filter(obj => {\n          return obj.matchupPeriodId >= currentWeek\n        }))\n        updatePastSchedule(res.data.schedule.filter(obj => {\n          return obj.matchupPeriodId < currentWeek\n        }))\n        if (currentSched.length > 0) {\n          updateMatchup(\n            currentSched[0].id\n          )\n        }\n      });\n  }, [league, year, currentWeek, teams]);\n\n  useEffect(() => {\n    const dataHome = pastSchedule.map(obj => {\n      return {\n        id: obj.id,\n        week: obj.matchupPeriodId,\n        teamId: obj.home.teamId,\n        totalPoints: obj.home.totalPoints\n      };\n    });\n    const dataAway = pastSchedule.map(obj => {\n      return {\n        id: obj.id,\n        week: obj.matchupPeriodId,\n        teamId: obj.away.teamId,\n        totalPoints: obj.away.totalPoints\n      };\n    });\n    const data = dataHome.concat(dataAway);\n    const updatedTeams = teams.map(obj => {\n      const stats = getStats(\n        data.sort((a, b) => {\n          return a.week - b.week;\n        })\n          .filter(obj2 => {\n            return obj2.teamId === obj.id;\n          })\n          .map(obj3 => obj3.totalPoints), weeksForProj\n      )\n\n      return { ...obj, average: stats.average, variance: stats.variance }\n    })\n    const calcedTeams = calcRecords(pastSchedule, updatedTeams)\n    updateTeams(calcedTeams)\n  }, [pastSchedule])\n\n  useEffect(() => {\n    try {\n      const tempAway = getItem(teams, getItem(futureSchedule, Number(selectedMatchup), 'id').away.teamId, 'id')\n      updateAway(tempAway)\n      const tempHome = getItem(teams, getItem(futureSchedule, Number(selectedMatchup), 'id').home.teamId, 'id')\n      updateHome(tempHome)\n      if (tempHome.average && tempAway.average) {\n        const newAwayNormDist = NormalDistribution(tempAway.average, tempAway.variance);\n        updateAwayNormDist(newAwayNormDist)\n        const newHomeNormDist = NormalDistribution(tempHome.average, tempHome.variance);\n        updateHomeNormDist(newHomeNormDist)\n        const newNormDist = NormalDistribution(tempHome.average - tempAway.average, tempHome.variance + tempAway.variance);\n        updateNormDist(newNormDist)\n        const newGraphData = generateNormalData([newAwayNormDist, newHomeNormDist, newNormDist])\n        updateGraphData(newGraphData)\n      }\n    } catch (error) {\n      console.log(error)\n    }\n  }, [selectedMatchup, currentWeekSchedule, teams])\n\n  if (teams.length === 0) {\n    return <div>Getting team data...</div>\n  }\n\n  if (pastSchedule.length === 0) {\n    return <div>Getting historical data...</div>\n  }\n\n  if (!selectedMatchup) {\n    return <div>Getting matchup data...</div>\n  }\n\n  if (!teams[0].record.calculated) {\n    return <div>Calculating...</div>\n  }\n\n  return (\n    <div>\n      <div className='row centerRow'>\n        <select name=\"matchUp\" className=\"matchUpSelect\" value={selectedMatchup} onChange={event => updateMatchup(event.target.value)}>\n          {futureSchedule.map(obj => {\n            const awayTeam = getItem(teams, obj.away.teamId, 'id')\n            const homeTeam = getItem(teams, obj.home.teamId, 'id')\n            if (!homeTeam || !awayTeam) {\n              return null\n            }\n            return <option value={obj.id}>Week {obj.matchupPeriodId}: {awayTeam.location} {awayTeam.nickname} vs {homeTeam.location} {homeTeam.nickname}</option>\n          })}\n        </select>\n      </div>\n      <div className='row fullWidth spaceEvenly'>\n        <div className='table'>\n          {away.average && away.variance && home.average && home.variance && <div className='row'>\n            <div className='col'>\n              <div className='row row-header'><div className='nameCell'>Team Name</div></div>\n              <div className='nameCell'>{away.location} {away.nickname}</div>\n              <div className='nameCell'>{home.location} {home.nickname}</div>\n            </div>\n            <div className='col valueCells'>\n              <div className='row row-header'><div className='valueCell'>Proj Points</div><div className='valueCell'>Standard Deviation</div><div className='valueCell'>Win %</div></div>\n              <div className='row'><div className='valueCell'>{away.average.toFixed(2)}</div><div className='valueCell'>{Math.sqrt(away.variance).toFixed(2)}</div><div className='valueCell'>{(normDist.cdf(0) * 100).toFixed(2)}%</div></div>\n              <div className='row'><div className='valueCell'>{home.average.toFixed(2)}</div><div className='valueCell'>{Math.sqrt(home.variance).toFixed(2)}</div><div className='valueCell'>{((1 - normDist.cdf(0)) * 100).toFixed(2)}%</div></div>\n            </div>\n          </div>}\n        </div>\n      </div>\n      <div className='row fullWidth spaceEvenly' >\n        <div className='graphContainer'>\n          <ResponsiveContainer width=\"100%\" height={300}>\n            <LineChart\n              data={graphData}\n              margin={{\n                top: 24, right: 56, left: 40, bottom: 8,\n              }}\n            >\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis dataKey=\"name\" type='number' />\n              <YAxis tickFormatter={formatYAxis} />\n              <Legend />\n              <Line type=\"monotone\" strokeWidth={3} dataKey=\"away\" stroke=\"#CC0014\" name={`${away.location} ${away.nickname}`} dot={false} />\n              <Line type=\"monotone\" strokeWidth={3} dataKey=\"home\" stroke=\"#31572c\" name={`${home.location} ${home.nickname}`} dot={false} />\n            </LineChart>\n          </ResponsiveContainer>\n        </div>\n        <div className='graphContainer'>\n          <ResponsiveContainer width=\"100%\" height={300}>\n            <LineChart\n              data={graphData}\n              margin={{\n                top: 24, right: 56, left: 40, bottom: 8,\n              }}\n            >\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis dataKey=\"name\" type='number' tickFormatter={formatDiffXAxis} />\n              <YAxis tickFormatter={formatYAxis} />\n              <Legend />\n              <Line type=\"monotone\" strokeWidth={3} dataKey=\"diff\" stroke=\"#000\" name={`${home.location} ${home.nickname} - ${away.location} ${away.nickname}`} dot={false} />\n            </LineChart>\n          </ResponsiveContainer>\n        </div>\n      </div>\n      <div className='row fullWidth spaceEvenly'>\n        <div className='table'>\n          <div className='fullWidth header'>Guy's Division</div>\n          <div className='row'>\n            <div className='col'>\n              <div className='row row-header'><div className='nameCell'>Team Name</div></div>\n              {teams.filter(obj => obj.divisionId === 0).sort((a, b) => {\n                if (b.record.calculated.wins - a.record.calculated.wins === 0) {\n                  return b.record.calculated.pointsFor - a.record.calculated.pointsFor\n                }\n                return b.record.calculated.wins - a.record.calculated.wins\n              }).map(obj => {\n                return <div className='nameCell'>{obj.location} {obj.nickname}</div>\n\n              })}\n            </div>\n            <div className='col valueCells'>\n              <div className=\"row row-header\"><div className='valueCell'>Wins</div><div className='valueCell'>Losses</div><div className='valueCell'>Points For</div><div className='valueCell'>Points Against</div></div>\n              {teams.filter(obj => obj.divisionId === 0).sort((a, b) => {\n                if (b.record.calculated.wins - a.record.calculated.wins === 0) {\n                  return b.record.calculated.pointsFor - a.record.calculated.pointsFor\n                }\n                return b.record.calculated.wins - a.record.calculated.wins\n              }).map(obj => {\n                return <div className=\"row\"><div className='valueCell'>{obj.record.calculated.wins}</div><div className='valueCell'>{obj.record.calculated.losses}</div><div className='valueCell'>{obj.record.calculated.pointsFor.toFixed(2)}</div><div className='valueCell'>{obj.record.calculated.pointsAgainst.toFixed(2)}</div></div>\n\n              })}\n            </div>\n          </div>\n        </div>\n        <div className='table'>\n          <div className='fullWidth header'>Girl's Division</div>\n          <div className='row'>\n            <div className='col'>\n              <div className='row row-header'><div className='nameCell'>Team Name</div></div>\n              {teams.filter(obj => obj.divisionId === 1).sort((a, b) => {\n                if (b.record.calculated.wins - a.record.calculated.wins === 0) {\n                  return b.record.calculated.pointsFor - a.record.calculated.pointsFor\n                }\n                return b.record.calculated.wins - a.record.calculated.wins\n              }).map(obj => {\n                return <div className='nameCell'>{obj.location} {obj.nickname}</div>\n\n              })}\n            </div>\n            <div className='col valueCells'>\n              <div className=\"row row-header\"><div className='valueCell'>Wins</div><div className='valueCell'>Losses</div><div className='valueCell'>Points For</div><div className='valueCell'>Points Against</div></div>\n              {teams.filter(obj => obj.divisionId === 1).sort((a, b) => {\n                if (b.record.calculated.wins - a.record.calculated.wins === 0) {\n                  return b.record.calculated.pointsFor - a.record.calculated.pointsFor\n                }\n                return b.record.calculated.wins - a.record.calculated.wins\n              }).map(obj => {\n                return <div className=\"row\"><div className='valueCell'>{obj.record.calculated.wins}</div><div className='valueCell'>{obj.record.calculated.losses}</div><div className='valueCell'>{obj.record.calculated.pointsFor.toFixed(2)}</div><div className='valueCell'>{obj.record.calculated.pointsAgainst.toFixed(2)}</div></div>\n\n              })}\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className='table playoffs'>\n        <div className='fullWidth header'>Playoff Rankings</div>\n        <div className='row fullWidth centerRow row-header'><div className='nameCell'>Team Name</div><div className='valueCell'>Playoff Seed</div></div>\n        {teams.map(obj => {\n          return <div className='row fullWidth centerRow'><div className='nameCell'>{obj.location} {obj.nickname}</div><div className='valueCell'>{obj.playoffSeed.toFixed(2)}</div></div>\n        })}\n      </div>\n      <div className='row fullWidth centerRow' style={{margin: '24px 0 8px 0'}}><button onClick={simulation}>{simulatedData.length ? \"Refresh\" : \"Run\"} Simulation</button></div>\n      {simulatedData.length ? <Fragment><div className='row fullWidth spaceEvenly'>\n        <div className='table'>\n          <div className='fullWidth header'>Projected Guy's Division</div>\n          <div className='row'>\n            <div className='col'>\n              <div className='row row-header'><div className='nameCell'>Team Name</div></div>\n              {simulatedData.filter(obj => obj.divisionId === 0).sort((a, b) => {\n                if (b.record.calculated.wins - a.record.calculated.wins === 0) {\n                  return b.record.calculated.pointsFor - a.record.calculated.pointsFor\n                }\n                return b.record.calculated.wins - a.record.calculated.wins\n              }).map(obj => {\n                return <div className='nameCell'>{obj.location} {obj.nickname}</div>\n\n              })}\n            </div>\n            <div className='col valueCells'>\n              <div className=\"row row-header\"><div className='valueCell'>Wins</div><div className='valueCell'>Losses</div><div className='valueCell'>Points For</div><div className='valueCell'>Points Against</div></div>\n              {simulatedData.filter(obj => obj.divisionId === 0).sort((a, b) => {\n                if (b.record.calculated.wins - a.record.calculated.wins === 0) {\n                  return b.record.calculated.pointsFor - a.record.calculated.pointsFor\n                }\n                return b.record.calculated.wins - a.record.calculated.wins\n              }).map(obj => {\n                return <div className=\"row\"><div className='valueCell'>{obj.record.calculated.wins.toFixed(2)}</div><div className='valueCell'>{obj.record.calculated.losses.toFixed(2)}</div><div className='valueCell'>{obj.record.calculated.pointsFor.toFixed(2)}</div><div className='valueCell'>{obj.record.calculated.pointsAgainst.toFixed(2)}</div></div>\n\n              })}\n            </div>\n          </div>\n        </div>\n        <div className='table'>\n          <div className='fullWidth header'>Projected Girl's Division</div>\n          <div className='row'>\n            <div className='col'>\n              <div className='row row-header'><div className='nameCell'>Team Name</div></div>\n              {simulatedData.filter(obj => obj.divisionId === 1).sort((a, b) => {\n                if (b.record.calculated.wins - a.record.calculated.wins === 0) {\n                  return b.record.calculated.pointsFor - a.record.calculated.pointsFor\n                }\n                return b.record.calculated.wins - a.record.calculated.wins\n              }).map(obj => {\n                return <div className='nameCell'>{obj.location} {obj.nickname}</div>\n\n              })}\n            </div>\n            <div className='col valueCells'>\n              <div className=\"row row-header\"><div className='valueCell'>Wins</div><div className='valueCell'>Losses</div><div className='valueCell'>Points For</div><div className='valueCell'>Points Against</div></div>\n              {simulatedData.filter(obj => obj.divisionId === 1).sort((a, b) => {\n                if (b.record.calculated.wins - a.record.calculated.wins === 0) {\n                  return b.record.calculated.pointsFor - a.record.calculated.pointsFor\n                }\n                return b.record.calculated.wins - a.record.calculated.wins\n              }).map(obj => {\n                return <div className=\"row\"><div className='valueCell'>{obj.record.calculated.wins.toFixed(2)}</div><div className='valueCell'>{obj.record.calculated.losses.toFixed(2)}</div><div className='valueCell'>{obj.record.calculated.pointsFor.toFixed(2)}</div><div className='valueCell'>{obj.record.calculated.pointsAgainst.toFixed(2)}</div></div>\n\n              })}\n            </div>\n          </div>\n        </div>\n      </div>\n\n        <div className='table'>\n          <div className='fullWidth header'>Projected Playoff Rankings</div>\n          <div className='row centerRow'>\n            <div className='col'>\n              <div className='row row-header'><div className='nameCell'>Team Name</div></div>\n              {simulatedData.map(obj => {\n                return (\n\n                  <div className='nameCell'>{obj.location} {obj.nickname}</div>\n                )\n              })}\n            </div>\n            <div className='col valueCells'>\n              <div className='row row-header'>\n                <div className='valueCell'>Avg Playoff Seed</div>\n                <div className='valueCell'>Playoff %</div>\n                {simulatedData.map((_, index) => {\n                  return <div className='valueCell'>{index + 1}</div>\n                })}\n              </div>\n              {simulatedData.map(obj => {\n                return (\n                  <div className='row'>\n                    <div className='valueCell'>{obj.playoffSeed.toFixed(2)}</div>\n                    <div className='valueCell'>{(Object.values(obj.playoffMatrix).reduce((a, b, index) => {\n                      if (Object.keys(obj.playoffMatrix)[index] <= 6) {\n                        return a + b\n                      }\n                      return a\n                    }, 0) * 100).toFixed(2)}%</div>\n                    {simulatedData.map((_, index) => {\n                      if (obj.playoffMatrix[index + 1]) {\n                        return <div className='valueCell'>{(obj.playoffMatrix[index + 1] * 100).toFixed(2)}%</div>\n                      }\n                      return <div className='valueCell'>-</div>\n                    })}\n                  </div>)\n              })}\n            </div>\n          </div>\n        </div>\n      </Fragment>: null}\n    </div>\n  );\n}\n\nconst formatYAxis = (tickItem) => {\n  return `${(tickItem * 100).toFixed(2)}%`\n}\n\nconst formatDiffXAxis = (tickItem) => {\n  return tickItem - 100\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}